-- MySQL Script generated by MySQL Workbench
-- Fri May  8 06:38:43 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE =
        'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema gestorDatabase
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `gestorDatabase`;

-- -----------------------------------------------------
-- Schema gestorDatabase
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gestorDatabase` DEFAULT CHARACTER SET utf8 COLLATE utf8_polish_ci;
USE `gestorDatabase`;

-- -----------------------------------------------------
-- Table `gestorDatabase`.`membership`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestorDatabase`.`membership`
(
    `membershipId` INT          NOT NULL,
    `type`         VARCHAR(45)  NOT NULL,
    `comment`      VARCHAR(127) NOT NULL,
    PRIMARY KEY (`membershipId`),
    UNIQUE INDEX `membershipId_UNIQUE` (`membershipId` ASC) VISIBLE,
    UNIQUE INDEX `type_UNIQUE` (`type` ASC) VISIBLE,
    UNIQUE INDEX `comment_UNIQUE` (`comment` ASC) VISIBLE
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestorDatabase`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestorDatabase`.`users`
(
    `userId`       INT         NOT NULL AUTO_INCREMENT,
    `name`         VARCHAR(45) NOT NULL,
    `surname`      VARCHAR(45) NOT NULL,
    `email`        VARCHAR(45) NOT NULL,
    `password`     VARCHAR(45) NOT NULL,
    `membershipId` INT         NOT NULL,
    PRIMARY KEY (`userId`),
    UNIQUE INDEX `userId_UNIQUE` (`userId` ASC) VISIBLE,
    UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
    INDEX `fk_users_membership1_idx` (`membershipId` ASC) VISIBLE,
    CONSTRAINT `fk_users_membership`
        FOREIGN KEY (`membershipId`)
            REFERENCES `gestorDatabase`.`membership` (`membershipId`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB
    DEFAULT CHARACTER SET = utf8
    COLLATE = utf8_polish_ci;


-- -----------------------------------------------------
-- Table `gestorDatabase`.`subjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestorDatabase`.`subjects`
(
    `subjectId` INT         NOT NULL AUTO_INCREMENT,
    `name`      VARCHAR(45) NOT NULL,
    PRIMARY KEY (`subjectId`),
    UNIQUE INDEX `subjectId_UNIQUE` (`subjectId` ASC) VISIBLE
)
    ENGINE = InnoDB
    DEFAULT CHARACTER SET = utf8
    COLLATE = utf8_polish_ci;


-- -----------------------------------------------------
-- Table `gestorDatabase`.`grades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestorDatabase`.`grades`
(
    `gradeId`            INT           NOT NULL AUTO_INCREMENT,
    `value`              DECIMAL(2, 1) NOT NULL,
    `users_userId`       INT           NOT NULL,
    `subjects_subjectId` INT           NOT NULL,
    PRIMARY KEY (`gradeId`),
    INDEX `fk_grades_users1_idx` (`users_userId` ASC) VISIBLE,
    UNIQUE INDEX `gradeId_UNIQUE` (`gradeId` ASC) VISIBLE,
    INDEX `fk_grades_subjects1_idx` (`subjects_subjectId` ASC) VISIBLE,
    CONSTRAINT `fk_grades_users1`
        FOREIGN KEY (`users_userId`)
            REFERENCES `gestorDatabase`.`users` (`userId`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_grades_subjects1`
        FOREIGN KEY (`subjects_subjectId`)
            REFERENCES `gestorDatabase`.`subjects` (`subjectId`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB
    DEFAULT CHARACTER SET = utf8
    COLLATE = utf8_polish_ci;


-- -----------------------------------------------------
-- Table `gestorDatabase`.`users_has_subjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestorDatabase`.`users_has_subjects`
(
    `users_userId`       INT NOT NULL,
    `subjects_subjectId` INT NOT NULL,
    INDEX `fk_users_has_subjects_subjects1_idx` (`subjects_subjectId` ASC) VISIBLE,
    INDEX `fk_users_has_subjects_users1_idx` (`users_userId` ASC) VISIBLE,
    CONSTRAINT `fk_users_has_subjects_users1`
        FOREIGN KEY (`users_userId`)
            REFERENCES `gestorDatabase`.`users` (`userId`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_users_has_subjects_subjects1`
        FOREIGN KEY (`subjects_subjectId`)
            REFERENCES `gestorDatabase`.`subjects` (`subjectId`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB
    DEFAULT CHARACTER SET = utf16;


-- -----------------------------------------------------
-- Table `gestorDatabase`.`parenthood`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestorDatabase`.`parenthood`
(
    `parenthoodId`           INT NOT NULL AUTO_INCREMENT,
    `users_userId`           INT NOT NULL,
    `users_first_parent_Id`  INT NOT NULL,
    `users_second_parent_Id` INT NOT NULL DEFAULT 0,
    PRIMARY KEY (`parenthoodId`),
    INDEX `fk_parents_users2_idx` (`users_userId` ASC) VISIBLE,
    UNIQUE INDEX `parentsId_UNIQUE` (`parenthoodId` ASC) VISIBLE,
    UNIQUE INDEX `users_userId_UNIQUE` (`users_userId` ASC) VISIBLE,
    CONSTRAINT `fk_parents_users2`
        FOREIGN KEY (`users_userId`)
            REFERENCES `gestorDatabase`.`users` (`userId`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestorDatabase`.`groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestorDatabase`.`groups`
(
    `groupId` INT         NOT NULL AUTO_INCREMENT,
    `name`    VARCHAR(45) NOT NULL,
    PRIMARY KEY (`groupId`),
    UNIQUE INDEX `groupId_UNIQUE` (`groupId` ASC) VISIBLE,
    UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestorDatabase`.`groups_has_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gestorDatabase`.`groups_has_users`
(
    `groups_groupId` INT NOT NULL,
    `users_userId`   INT NOT NULL,
    INDEX `fk_groups_has_users_users1_idx` (`users_userId` ASC) VISIBLE,
    INDEX `fk_groups_has_users_groups1_idx` (`groups_groupId` ASC) VISIBLE,
    CONSTRAINT `fk_groups_has_users_groups1`
        FOREIGN KEY (`groups_groupId`)
            REFERENCES `gestorDatabase`.`groups` (`groupId`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_groups_has_users_users1`
        FOREIGN KEY (`users_userId`)
            REFERENCES `gestorDatabase`.`users` (`userId`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `gestorDatabase`.`membership`
-- -----------------------------------------------------
START TRANSACTION;
USE `gestorDatabase`;
INSERT INTO `gestorDatabase`.`membership` (`membershipId`, `type`, `comment`)
VALUES (1, 'student', 'can see messages, grades and homeworks');
INSERT INTO `gestorDatabase`.`membership` (`membershipId`, `type`, `comment`)
VALUES (2, 'teacher', 'can send messages, add grades');
INSERT INTO `gestorDatabase`.`membership` (`membershipId`, `type`, `comment`)
VALUES (3, 'parent', 'can see students grades, messages and homeworks');
INSERT INTO `gestorDatabase`.`membership` (`membershipId`, `type`, `comment`)
VALUES (4, 'director', 'can send messages, manage classes');

COMMIT;


-- -----------------------------------------------------
-- Data for table `gestorDatabase`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `gestorDatabase`;
INSERT INTO `gestorDatabase`.`users` (`userId`, `name`, `surname`, `email`, `password`, `membershipId`)
VALUES (1, 'Ziutek', 'Zuzowski', 'ziutek@yyy.pl', 'ziutek123', 1);
INSERT INTO `gestorDatabase`.`users` (`userId`, `name`, `surname`, `email`, `password`, `membershipId`)
VALUES (2, 'Ziutka', 'Zenowska', 'ziutka@xxx.pl', 'ziutka123', 1);
INSERT INTO `gestorDatabase`.`users` (`userId`, `name`, `surname`, `email`, `password`, `membershipId`)
VALUES (3, 'Zenon', 'Zenowski', 'zenonzenowski123@yy.pl', 'zenonzenowski123', 3);
INSERT INTO `gestorDatabase`.`users` (`userId`, `name`, `surname`, `email`, `password`, `membershipId`)
VALUES (4, 'Zenna', 'Zuzowska', 'zennazuzowska123@xx.pl', 'zennazuzowska123', 3);
INSERT INTO `gestorDatabase`.`users` (`userId`, `name`, `surname`, `email`, `password`, `membershipId`)
VALUES (5, 'Adam', 'Adaski', 'adamadamski@xyz.pl', 'adamadamski123', 2);
INSERT INTO `gestorDatabase`.`users` (`userId`, `name`, `surname`, `email`, `password`, `membershipId`)
VALUES (6, 'Bartosz', 'Bartosz', 'bartoszbartowski@xxx.pl', 'bartoszbartowski123', 2);
INSERT INTO `gestorDatabase`.`users` (`userId`, `name`, `surname`, `email`, `password`, `membershipId`)
VALUES (7, 'Cecylian', 'Cecylowski', 'cecyliancecylowski@zz.pl', 'cecyliancecylowski123', 2);
INSERT INTO `gestorDatabase`.`users` (`userId`, `name`, `surname`, `email`, `password`, `membershipId`)
VALUES (8, 'Dominik', 'Domiczy≈Ñski', 'dominik@dd.pl', 'dominik123', 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `gestorDatabase`.`subjects`
-- -----------------------------------------------------
START TRANSACTION;
USE `gestorDatabase`;
INSERT INTO `gestorDatabase`.`subjects` (`subjectId`, `name`)
VALUES (1, 'Logika');
INSERT INTO `gestorDatabase`.`subjects` (`subjectId`, `name`)
VALUES (2, 'Matematyka');
INSERT INTO `gestorDatabase`.`subjects` (`subjectId`, `name`)
VALUES (3, 'Ekonomia');

COMMIT;


-- -----------------------------------------------------
-- Data for table `gestorDatabase`.`grades`
-- -----------------------------------------------------
START TRANSACTION;
USE `gestorDatabase`;
INSERT INTO `gestorDatabase`.`grades` (`gradeId`, `value`, `users_userId`, `subjects_subjectId`)
VALUES (1, 5, 1, 1);
INSERT INTO `gestorDatabase`.`grades` (`gradeId`, `value`, `users_userId`, `subjects_subjectId`)
VALUES (2, 4, 2, 1);
INSERT INTO `gestorDatabase`.`grades` (`gradeId`, `value`, `users_userId`, `subjects_subjectId`)
VALUES (3, 6, 1, 2);
INSERT INTO `gestorDatabase`.`grades` (`gradeId`, `value`, `users_userId`, `subjects_subjectId`)
VALUES (4, 3, 2, 2);
INSERT INTO `gestorDatabase`.`grades` (`gradeId`, `value`, `users_userId`, `subjects_subjectId`)
VALUES (5, 2, 1, 3);
INSERT INTO `gestorDatabase`.`grades` (`gradeId`, `value`, `users_userId`, `subjects_subjectId`)
VALUES (6, 5, 2, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `gestorDatabase`.`users_has_subjects`
-- -----------------------------------------------------
START TRANSACTION;
USE `gestorDatabase`;
INSERT INTO `gestorDatabase`.`users_has_subjects` (`users_userId`, `subjects_subjectId`)
VALUES (1, 1);
INSERT INTO `gestorDatabase`.`users_has_subjects` (`users_userId`, `subjects_subjectId`)
VALUES (2, 2);
INSERT INTO `gestorDatabase`.`users_has_subjects` (`users_userId`, `subjects_subjectId`)
VALUES (2, 3);
INSERT INTO `gestorDatabase`.`users_has_subjects` (`users_userId`, `subjects_subjectId`)
VALUES (5, 1);
INSERT INTO `gestorDatabase`.`users_has_subjects` (`users_userId`, `subjects_subjectId`)
VALUES (6, 2);
INSERT INTO `gestorDatabase`.`users_has_subjects` (`users_userId`, `subjects_subjectId`)
VALUES (7, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `gestorDatabase`.`parenthood`
-- -----------------------------------------------------
START TRANSACTION;
USE `gestorDatabase`;
INSERT INTO `gestorDatabase`.`parenthood` (`parenthoodId`, `users_userId`, `users_first_parent_Id`,
                                           `users_second_parent_Id`)
VALUES (1, 1, 4, DEFAULT);
INSERT INTO `gestorDatabase`.`parenthood` (`parenthoodId`, `users_userId`, `users_first_parent_Id`,
                                           `users_second_parent_Id`)
VALUES (2, 2, 3, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `gestorDatabase`.`groups`
-- -----------------------------------------------------
START TRANSACTION;
USE `gestorDatabase`;
INSERT INTO `gestorDatabase`.`groups` (`groupId`, `name`)
VALUES (1, 'VII');
INSERT INTO `gestorDatabase`.`groups` (`groupId`, `name`)
VALUES (2, 'VIII');

COMMIT;


-- -----------------------------------------------------
-- Data for table `gestorDatabase`.`groups_has_users`
-- -----------------------------------------------------
START TRANSACTION;
USE `gestorDatabase`;
INSERT INTO `gestorDatabase`.`groups_has_users` (`groups_groupId`, `users_userId`)
VALUES (1, 1);
INSERT INTO `gestorDatabase`.`groups_has_users` (`groups_groupId`, `users_userId`)
VALUES (2, 2);

COMMIT;

